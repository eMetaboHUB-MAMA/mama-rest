<?php
/**
 * 
 * Code skeleton generated by dia-uml2php5 plugin
 * written by KDO kdo@zpmag.com
 * @see        AbstractMAMAobject
 * 
 * @Entity @Table(name="manager_thematic_words")
 */
require_once ('AbstractMAMAobject.class.php');
class ProjectExtraDataThematicCloudWord extends AbstractMAMAobject {
	
	// ========================================================================
	// STATICS
	
	// ========================================================================
	// ATTRIBUTES
	
	/**
	 * @Column(type="string", unique=true, nullable=false )
	 *
	 * @var String
	 * @access private
	 */
	private $word;
	
	// ========================================================================
	// CONSTRUCTORS
	
	/**
	 *
	 * @param String $word        	
	 */
	public function __construct($word) {
		parent::__construct ();
		$this->word = $word;
	}
	
	// ========================================================================
	// GETTERS
	
	/**
	 *
	 * @return String
	 */
	public function getWord() {
		return $this->word;
	}
	
	// ========================================================================
	// SETTERS
	
	/**
	 *
	 * @param String $word        	
	 */
	public function setWord($word) {
		$this->word = $word;
	}
	
	public function setDeleted($deleted) {
		$this->deleted = $deleted;
	}
	
	// ========================================================================
	// OTHER
	/**
	 */
	public function prune() {
		$this->id = intval ( $this->getId () );
	}
	
	/**
	 */
	public function getJsonData() {
		$this->prune ();
		$var = get_object_vars ( $this );
		unset ( $var ["__initializer__"] );
		unset ( $var ["__cloner__"] );
		unset ( $var ["__isInitialized__"] );
		foreach ( $var as &$value ) {
			if (is_object ( $value ) && method_exists ( $value, 'getJsonData' )) {
				$value = $value->getJsonData ();
			}
		}
		return $var;
	}
	
	/**
	 */
	public function getArrayData() {
		$this->prune ();
		$ret = Array ();
		$var = get_object_vars ( $this );
		unset ( $var ["__initializer__"] );
		unset ( $var ["__cloner__"] );
		unset ( $var ["__isInitialized__"] );
		foreach ( $var as $key => $val ) {
			// if (is_object ( $val ) && method_exists ( $val, 'getArrayData' )) {
			// $val = $val->getArrayData ();
			// }
			$ret [$key] = object2array ( $val );
		}
		return $ret;
	}
}
?>